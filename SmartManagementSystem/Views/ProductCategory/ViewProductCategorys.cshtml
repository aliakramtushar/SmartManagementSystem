@{
    ViewBag.Title = "View ProductCategorys";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="panel panel-primary">
    <div class="panel-heading">Product Category List</div>
    <div class="panel-body" style="width:100%; margin:0; padding:0">
        <div ng-app="ProductCategoryApp" style="height:520px">
            <div ng-controller="ProductCategoryController">
                <div class="sms-panel-btn">
                    <input type="text" class="sms-searchBox" ng-model="CategoryName" ng-keyup="Search()" style="width:180px" placeholder="Search by Name"/>
                    <button type="button" class="btn btn-sm btn-primary" ng-click="Search()"><i class="glyphicon glyphicon-search"></i> Search</button>
                    <button type="button" ng-click="Add()" class="btn btn-sm btn-success"><i class="glyphicon glyphicon-plus"></i> Add New</button>
                    <button type="button" ng-click="Edit()" class="btn btn-sm btn-warning"><i class="glyphicon glyphicon-edit"></i> Edit</button>
                    <button type="button" ng-click="Delete()" class="btn btn-sm btn-danger"><i class="glyphicon glyphicon-minus"></i> Delete</button>
                </div>
                <div>
                    <div ui-grid="gridOptions" ui-grid-selection class="grid-angular"></div>
                </div>
            </div>
        </div>
    </div>
</div>


<style type="text/css">
    .grid-angular {
        width: 100%;
        height: 475px;
    }
</style>
<script type="text/javascript">
    debugger;
    var oProductCategorys =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
    var nBUID =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BUID));

    debugger;
    var ProductCategoryModule= angular.module('ProductCategoryApp', ['ui.grid','ui.grid.selection']);
    ProductCategoryModule.controller('ProductCategoryController',function ($scope,uiGridConstants,$http)
    {
       // oProductCategorys = (sessionStorage.getItem('ProductCategorys')!=null)? JSON.parse(sessionStorage.getItem('ProductCategorys')) : oProductCategorys;
        debugger;
        $scope.gridOptions= {
            multiSelect: false,
            enableFullRowSelection: true,
            columnDefs: [
               { field: 'CategoryName', name:'Category Name', width:'25%' },
               { field: 'CategoryCode', name:'Code', width:'20%' },
               { field: 'ProductTypeName', name:'Product Type', width:'20%' },
               { field: 'Note', name:'Note', width:'30%'  }
            ],
            data: oProductCategorys,
            onRegisterApi : function(gridApi)
            {
                $scope.gridApi = gridApi;
                $scope.gridApi.selection.clearSelectedRows();
                $scope.gridApi.core.refresh();
                if(oProductCategorys.length>0 && parseInt(sessionStorage.getItem('SelectedRowIndex'))>=0)
                {
                    $scope.gridApi.grid.modifyRows(oProductCategorys);
                    $scope.gridApi.selection.selectRow(oProductCategorys[parseInt(sessionStorage.getItem('SelectedRowIndex'))]);
                    $scope.RowSelect(oProductCategorys[parseInt(sessionStorage.getItem('SelectedRowIndex'))]);
                }
            }
        };
        $scope.Add = function(e)
        {
            sessionStorage.setItem("ProductCategorys", JSON.stringify($scope.gridOptions.data));
            sessionStorage.setItem("Operation", "Add");
            sessionStorage.setItem("PageHeader", "Add ProductCategory");
            sessionStorage.setItem("BackLink", window.location.href);
            window.location.href = "/ProductCategory/ViewProductCategory?nProductCategoryID=0";
        }
        $scope.Edit = function(e)
        {
            debugger;
            var data=$scope.gridApi.selection.getSelectedRows();
            var oProductCategory= data[0];//get selected index
            if(oProductCategory==null || oProductCategory.ProductCategoryID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            var SelectedRowIndex= $scope.gridOptions.data.indexOf(oProductCategory);
            sessionStorage.setItem("ProductCategorys", JSON.stringify($scope.gridOptions.data));
            sessionStorage.setItem("Operation", "Edit");
            sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
            sessionStorage.setItem("PageHeader", "Edit ProductCategory");
            sessionStorage.setItem("BackLink", window.location.href);
            window.location.href = sessionStorage.getItem("BaseAddress") +  "/ProductCategory/ViewProductCategory?nProductCategoryID="+oProductCategory.ProductCategoryID;
        }
        $scope.Delete = function()
        {
            debugger;
            var data=$scope.gridApi.selection.getSelectedRows();
            var oProductCategory= data[0];//get selected index
            if(oProductCategory==null || oProductCategory.ProductCategoryID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            if (!confirm("Confirm to Delete?")) return ;
            var SelectedRowIndex= $scope.gridOptions.data.indexOf(oProductCategory);

            $http.post(sessionStorage.getItem("BaseAddress") + '/ProductCategory/Delete',oProductCategory).then(
                  function (response)
                  {
                      var oProductCategory= jQuery.parseJSON(response.data);
                      if (oProductCategory.ErrorMessage=="" || oProductCategory.ErrorMessage==null)
                      {
                          alert("Delete Successfully!!");
                          $scope.gridOptions.data.splice(SelectedRowIndex,1);
                          $scope.gridApi.core.refresh();
                      }
                      else
                      {
                          alert(oProductCategory.ErrorMessage);
                      }
                  },
                       function (response) { alert(response.statusText);}
              );
        }
        $scope.Search = function()
        {
            debugger;
            var oData = {
                CategoryName : $scope.CategoryName,
            }
            if(oData.CategoryName == null || oData.CategoryName == "")
            {
                alert("Please Enter a Category Name !!");
                return;
            }
            $http.post(sessionStorage.getItem("BaseAddress") + '/ProductCategory/Search',oData).then(
                  function (response)
                  {
                      debugger;
                      var oDatas = jQuery.parseJSON(response.data);
                      if (oDatas.length>0)
                      {
                          $scope.gridOptions.data = oDatas;
                      }
                      else
                      {
                          alert("No Data Found");
                      }
                  },
                      function (response) { alert(jQuery.parseJSON(response.data).Message);}
              );
        }
    });


</script>