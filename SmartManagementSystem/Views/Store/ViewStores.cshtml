
@{
    ViewBag.Title = "View Stores";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="panel panel-primary">
    <div class="panel-heading">Store List (Gudam)</div>
    <div class="panel-body" style="width:100%; margin:0; padding:0">
        <div ng-app="StoreApp" style="height:520px">
            <div ng-controller="StoreController">
                <div class="sms-panel-btn">
                    <input type="text" class="sms-searchBox" ng-model="StoreName" ng-keyup="Search()" style="width:180px" placeholder="Search by Name" />
                    <button type="button" class="btn btn-sm btn-primary" ng-click="Search()"><i class="glyphicon glyphicon-search"></i> Search</button>
                    <button type="button" class="btn btn-sm btn-success" ng-click="Add()" ><i class="glyphicon glyphicon-plus"></i> Add New</button>
                    <button type="button" class="btn btn-sm btn-warning" ng-click="Edit()" ><i class="glyphicon glyphicon-edit"></i> Edit</button>
                    <button type="button" class="btn btn-sm btn-danger" ng-click="Delete()" ><i class="glyphicon glyphicon-minus"></i> Delete</button>
                    @*<button type="button" class="btn btn-sm btn-default"><i class="glyphicon glyphicon-print"></i> Print</button>*@
                    @*<button type="button" class="btn btn-link">Link</button>*@
                </div>
                <div>
                    <div ui-grid="gridOptions" ui-grid-selection class="grid-angular"></div>
                </div>
            </div>
        </div>
    </div>
</div>


<style type="text/css">
    .grid-angular {
        width: 100%;
        height: 475px;
    }
</style>
<script type="text/javascript">
    debugger;
    var oStores =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
    var nBUID =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BUID));

    debugger;
    var StoreModule= angular.module('StoreApp', ['ui.grid','ui.grid.selection']);
    StoreModule.controller('StoreController',function ($scope,$http,uiGridConstants)
    {
        //oStores = (sessionStorage.getItem('Stores')!=null)? JSON.parse(sessionStorage.getItem('Stores')) : oStores;
        debugger;
        $scope.gridOptions= {
            multiSelect: false,
            enableFullRowSelection: true,
            columnDefs: [
              { field: 'StoreName', name:'Store Name', width:'25%' },
              { field: 'StoreShortName', name:'Short Name', width:'15%' },
              { field: 'Capacity', name:'Capacity', width:'12%'  },
            ],
            data: oStores,
            onRegisterApi : function(gridApi)
            {
                $scope.gridApi = gridApi;
                $scope.gridApi.selection.clearSelectedRows();
                $scope.gridApi.core.refresh();
                if(oStores.length>0 && parseInt(sessionStorage.getItem('SelectedRowIndex'))>=0)
                {
                    $scope.gridApi.grid.modifyRows(oStores);
                    $scope.gridApi.selection.selectRow(oStores[parseInt(sessionStorage.getItem('SelectedRowIndex'))]);
                    $scope.RowSelect(oStores[parseInt(sessionStorage.getItem('SelectedRowIndex'))]);
                }
            }
        };
        $scope.Add = function(e)
        {
            sessionStorage.setItem("Stores", JSON.stringify($scope.gridOptions.data));
            sessionStorage.setItem("Operation", "Edit");
            sessionStorage.setItem("PageHeader", "Edit Store");
            sessionStorage.setItem("BackLink", window.location.href);
            window.location.href = "/Store/ViewStore?nStoreID=0";
        }
        $scope.Edit = function(e)
        {
            debugger;
            var data=$scope.gridApi.selection.getSelectedRows();
            var oStore= data[0];//get selected index
            if(oStore==null || oStore.StoreID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            var SelectedRowIndex= $scope.gridOptions.data.indexOf(oStore);
            sessionStorage.setItem("Stores", JSON.stringify($scope.gridOptions.data));
            sessionStorage.setItem("Operation", "Edit");
            sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
            sessionStorage.setItem("PageHeader", "Edit Store");
            sessionStorage.setItem("BackLink", window.location.href);
            window.location.href = sessionStorage.getItem("BaseAddress") +  "/Store/ViewStore?nStoreID="+oStore.StoreID;
        }
        $scope.Delete = function()
        {
                debugger;
                var data=$scope.gridApi.selection.getSelectedRows();
                var oStore= data[0];//get selected index
                if(oStore==null || oStore.StoreID<=0)
                {
                    alert("Please select a item from list!");
                    return;
                }
                if (!confirm("Confirm to Delete?")) return ;
                var SelectedRowIndex= $scope.gridOptions.data.indexOf(oStore);

                $http.post(sessionStorage.getItem("BaseAddress") + '/Store/Delete',oStore).then(
                      function (response)
                      {
                          debugger;
                          var oStore= jQuery.parseJSON(response.data);
                          if (oStore.ErrorMessage=="" || oStore.ErrorMessage==null)
                          {
                              alert("Delete Successfully!!");
                              $scope.gridOptions.data.splice(SelectedRowIndex,1);
                              $scope.gridApi.core.refresh();
                          }
                          else
                          {
                              alert(oStore.ErrorMessage);
                          }

                      },
                          function (response) { alert(response.statusText);}
                  );
        }
        $scope.Search = function()
        {
            debugger;
            if($scope.StoreName == null || $scope.StoreName == "")
            {
                alert("Please Enter a Store Name !!");
                return;
            }
            var oData = {
                StoreName : $scope.StoreName,
            }
            $http.post(sessionStorage.getItem("BaseAddress") + '/Store/Search',oData).then(
                  function (response)
                  {
                      debugger;
                      var oDatas = jQuery.parseJSON(response.data);
                      if (oDatas.length>0)
                      {
                          $scope.gridOptions.data = oDatas;
                      }
                      else
                      {
                          alert("No Data Found");
                      }
                  },
                      function (response) { alert(jQuery.parseJSON(response.data).Message);}
              );
        }
    });


</script>