@{
    ViewBag.Title = "View Users";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="panel panel-primary">
    <div class="panel-heading">User List</div>
    <div class="panel-body" style="width:100%; margin:0; padding:0">
        <div ng-app="UserApp" style="height:520px">
            <div ng-controller="UserController">
                <div class="sms-panel-btn">
                    <input type="text" class="sms-searchBox" ng-model="UserName" ng-keyup="Search()" style="width:180px" placeholder="Search by Name" />
                    @*<button type="button" class="btn">Basic</button>*@
                    <button type="button" class="btn btn-sm btn-primary" ng-click="Search()"><i class="glyphicon glyphicon-search"></i> Search</button>
                    @*<button type="button" class="btn btn-sm btn-info"><i class="glyphicon glyphicon-eye-open"></i> Advance Search</button>*@
                    <button type="button" class="btn btn-sm btn-success" ng-click="Add()" id="btnAdd" disabled="disabled"><i class="glyphicon glyphicon-plus"></i> Add New</button>
                    <button type="button" class="btn btn-sm btn-warning" ng-click="Edit()" id="btnEdit" disabled="disabled" ><i class="glyphicon glyphicon-edit"></i> Edit</button>
                    <button type="button" class="btn btn-sm btn-danger"  ng-click="Delete()" id="btnDelete" disabled="disabled" ><i class="glyphicon glyphicon-minus"></i> Delete</button>
                    @*<button type="button" class="btn btn-sm btn-default"><i class="glyphicon glyphicon-print"></i> Print</button>*@
                    @*<button type="button" class="btn btn-link">Link</button>*@
                </div>
                <div>
                    <div ui-grid="gridOptions" ui-grid-selection class="grid-angular" ui-grid-resize-columns></div>
                </div>
            </div>
        </div>
    </div>
</div>
<style type="text/css">
    .grid-angular {
        width: 100%;
        height: 475px;
    }
</style>
<script type="text/javascript">
    debugger;
    var oUsers =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
    var nBUID =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BUID));
    var oLoginUser =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.LoginUser));

    debugger;
    if(oLoginUser.UserTypeInInt==1)
    {
        document.getElementById("btnAdd").disabled = false;
        document.getElementById("btnEdit").disabled = false;
        document.getElementById("btnDelete").disabled = false;
    }

    var UserModule= angular.module('UserApp', ['ui.grid','ui.grid.selection','ui.grid.resizeColumns']);
    UserModule.controller('UserController',function ($scope,$http,uiGridConstants)
    {
        //oUsers = (sessionStorage.getItem('Users')!=null)? JSON.parse(sessionStorage.getItem('Users')) : oUsers;
        debugger;
        $scope.gridOptions= {
            multiSelect: false,
            enableFullRowSelection: true,
            columnDefs: [
              //{ field: 'UserName', name:'User Name', width:'20%' },
              { field: 'UserShortName', name:'User Name', width:'20%' },
              { field: 'Mobile', name:'Mobile', width:'12%' },
              { field: 'Email', name:'Email', width:'20%'  },
              { field: 'UserTypeSt', name:'UserType', width:'12%'  },
              { field: 'ActivitySt', name:'Activity', width:'12%'  },


            ],
            data: oUsers,
            onRegisterApi : function(gridApi)
            {
                $scope.gridApi = gridApi;
                $scope.gridApi.selection.clearSelectedRows();
                $scope.gridApi.core.refresh();
                if(oUsers.length>0 && parseInt(sessionStorage.getItem('SelectedRowIndex'))>=0)
                {
                    $scope.gridApi.grid.modifyRows(oUsers);
                    $scope.gridApi.selection.selectRow(oUsers[parseInt(sessionStorage.getItem('SelectedRowIndex'))]);
                    $scope.RowSelect(oUsers[parseInt(sessionStorage.getItem('SelectedRowIndex'))]);
                }
            }
        };
        $scope.Add = function(e)
        {
            sessionStorage.setItem("Users", JSON.stringify($scope.gridOptions.data));
            sessionStorage.setItem("Operation", "Edit");
            sessionStorage.setItem("PageHeader", "Edit User");
            sessionStorage.setItem("BackLink", window.location.href);
            window.location.href = "/User/ViewUser?nUserID=0";
        }
        $scope.Edit = function(e)
        {
            debugger;
            var data=$scope.gridApi.selection.getSelectedRows();
            var oUser= data[0];//get selected index
            if(oUser==null || oUser.UserID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            var SelectedRowIndex= $scope.gridOptions.data.indexOf(oUser);
            sessionStorage.setItem("Users", JSON.stringify($scope.gridOptions.data));
            sessionStorage.setItem("Operation", "Edit");
            sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
            sessionStorage.setItem("PageHeader", "Edit User");
            sessionStorage.setItem("BackLink", window.location.href);
            window.location.href = sessionStorage.getItem("BaseAddress") +  "/User/ViewUser?nUserID="+oUser.UserID;
        }
        $scope.Delete = function()
        {
            debugger;
            var data=$scope.gridApi.selection.getSelectedRows();
            var oUser= data[0];//get selected index
            if(oUser==null || oUser.UserID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            if (!confirm("Confirm to Delete?")) return ;
            var SelectedRowIndex= $scope.gridOptions.data.indexOf(oUser);

            $http.post(sessionStorage.getItem("BaseAddress") + '/User/Delete',oUser).then(
                  function (response)
                  {
                      var oUser= jQuery.parseJSON(response.data);
                      if (oUser.ErrorMessage=="" || oUser.ErrorMessage==null)
                      {
                          alert("Delete Successfully!!");
                          $scope.gridOptions.data.splice(SelectedRowIndex,1);
                          $scope.gridApi.core.refresh();
                      }
                      else
                      {
                          alert(oUser.ErrorMessage);
                      }

                  },
                      function (response) { alert(jQuery.parseJSON(response.data).Message);}
              );
        }
        $scope.Search = function()
        {
            debugger;
            if($scope.UserName == null || $scope.UserName == "")
            {
                //alert("Please Enter a User Name !!");
                //return;
            }
            var oUser = {
                UserName : $scope.UserName,
            }
            $http.post(sessionStorage.getItem("BaseAddress") + '/User/Search',oUser).then(
                  function (response)
                  {
                      debugger;
                      var oUsers = jQuery.parseJSON(response.data);
                      if (oUsers.length>0)
                      {
                          $scope.gridOptions.data = oUsers;
                      }
                      else
                      {
                          alert("No Data Found");
                      }
                  },
                      function (response) { alert(jQuery.parseJSON(response.data).Message);$scope.MeasurementUnits=[];}
              );
        }
    });


</script>