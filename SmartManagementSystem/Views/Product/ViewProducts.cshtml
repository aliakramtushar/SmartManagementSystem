
@{
    ViewBag.Title = "View Products";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="panel panel-primary">
    <div class="panel-heading">Product List</div>
    <div class="panel-body" style="width:100%; margin:0; padding:0">
        <div ng-app="ProductApp" style="height:520px">
            <div ng-controller="ProductController">
                <div class="sms-panel-btn">
                    <input type="text" class="sms-searchBox" ng-model="ProductName" style="width:180px" ng-keyup="Search()" placeholder="Search by Name" />
                    <button type="button" class="btn btn-sm btn-primary" ng-click="Search()"><i class="glyphicon glyphicon-search"></i> Search</button>
                    <button type="button" class="btn btn-sm btn-success" ng-click="Add()" ><i class="glyphicon glyphicon-plus"></i> Add New</button>
                    <button type="button" class="btn btn-sm btn-warning" ng-click="Edit()" ><i class="glyphicon glyphicon-edit"></i> Edit</button>
                    <button type="button" class="btn btn-sm btn-danger"  ng-click="Delete()" ><i class="glyphicon glyphicon-minus"></i> Delete</button>
                </div>
                <div>
                    <div ui-grid="gridOptions" ui-grid-selection class="grid-angular"></div>
                </div>
            </div>
        </div>
    </div>
</div>


<style type="text/css">
    .grid-angular {
        width: 100%;
        height: 475px;
    }
</style>
<script type="text/javascript">
    debugger;
    var oProducts =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model));
    var nBUID =@Html.Raw( new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.BUID));

    debugger;
    var ProductModule= angular.module('ProductApp', ['ui.grid','ui.grid.selection']);
    ProductModule.controller('ProductController',function ($scope,$http,uiGridConstants)
    {
        //oProducts = (sessionStorage.getItem('Products')!=null)? JSON.parse(sessionStorage.getItem('Products')) : oProducts;
        debugger;
        $scope.gridOptions= {
            multiSelect: false,
            enableFullRowSelection: true,
            columnDefs: [
              { field: 'ProductName', name:'Product Name', width:'35%' },
              { field: 'ProductCode', name:'Code', width:'20%' },
              { field: 'CategoryName', name:'Category Name', width:'20%'  },
              { field: 'ProductTypeName', name:'Product Type', width:'20%' },

            ],
            data: oProducts,
            onRegisterApi : function(gridApi)
            {
                $scope.gridApi = gridApi;
                $scope.gridApi.selection.clearSelectedRows();
                $scope.gridApi.core.refresh();
                if(oProducts.length>0 && parseInt(sessionStorage.getItem('SelectedRowIndex'))>=0)
                {
                    $scope.gridApi.grid.modifyRows(oProducts);
                    $scope.gridApi.selection.selectRow(oProducts[parseInt(sessionStorage.getItem('SelectedRowIndex'))]);
                    $scope.RowSelect(oProducts[parseInt(sessionStorage.getItem('SelectedRowIndex'))]);
                }
            }
        };
        $scope.Add = function(e)
        {
            sessionStorage.setItem("Products", JSON.stringify($scope.gridOptions.data));
            sessionStorage.setItem("Operation", "Edit");
            sessionStorage.setItem("PageHeader", "Edit Product");
            sessionStorage.setItem("BackLink", window.location.href);
            window.location.href = "/Product/ViewProduct?nProductID=0";
        }
        $scope.Edit = function(e)
        {
            debugger;
            var data=$scope.gridApi.selection.getSelectedRows();
            var oProduct= data[0];//get selected index
            if(oProduct==null || oProduct.ProductID<=0)
            {
                alert("Please select a item from list!");
                return;
            }
            var SelectedRowIndex= $scope.gridOptions.data.indexOf(oProduct);
            sessionStorage.setItem("Products", JSON.stringify($scope.gridOptions.data));
            sessionStorage.setItem("Operation", "Edit");
            sessionStorage.setItem("SelectedRowIndex", SelectedRowIndex);
            sessionStorage.setItem("PageHeader", "Edit Product");
            sessionStorage.setItem("BackLink", window.location.href);
            window.location.href = sessionStorage.getItem("BaseAddress") +  "/Product/ViewProduct?nProductID="+oProduct.ProductID;
        }
        $scope.Delete = function()
        {
                debugger;
                var data=$scope.gridApi.selection.getSelectedRows();
                var oProduct= data[0];//get selected index
                if(oProduct==null || oProduct.ProductID<=0)
                {
                    alert("Please select a item from list!");
                    return;
                }
                if (!confirm("Confirm to Delete?")) return ;
                var SelectedRowIndex= $scope.gridOptions.data.indexOf(oProduct);

                $http.post(sessionStorage.getItem("BaseAddress") + '/Product/Delete',oProduct).then(
                      function (response)
                      {
                          var oProduct= jQuery.parseJSON(response.data);
                          if (oProduct.ErrorMessage=="" || oProduct.ErrorMessage==null)
                          {
                              alert("Delete Successfully!!");
                              $scope.gridOptions.data.splice(SelectedRowIndex,1);
                              $scope.gridApi.core.refresh();
                          }
                          else
                          {
                              alert(oProduct.ErrorMessage);
                          }

                      },
                          function (response) { alert(response.statusText);}
                  );
        }
        $scope.Search = function()
        {
            debugger;
            if($scope.ProductName == null || $scope.ProductName == "")
            {
                return;
            }
            var oData = {
                ProductName : $scope.ProductName,
            }
            $http.post(sessionStorage.getItem("BaseAddress") + '/Product/Search',oData).then(
                  function (response)
                  {
                      debugger;
                      var oDatas = jQuery.parseJSON(response.data);
                      if (oDatas.length>0)
                      {
                          $scope.gridOptions.data = oDatas;
                      }
                      else
                      {
                          alert("No Data Found");
                      }
                  },
                      function (response) { alert(jQuery.parseJSON(response.data).Message);}
              );
        }
    });


</script>